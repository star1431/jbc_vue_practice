{"version":3,"file":"js/658.60f5b461.js","mappings":"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","sources":["webpack://jbc_test/./src/views/pages/note/vue_skill/vue-basic.vue","webpack://jbc_test/./src/views/pages/note/vue_skill/vue-basic.vue?81c3"],"sourcesContent":["<template>\r\n  <div class=\"section\">\r\n    <h3><span>Vue 기능</span></h3>\r\n    <div class=\"info_wrap\">\r\n      <h4><i class=\"fa-brands fa-vuejs\"></i>Vue 템플릿 문법</h4>\r\n      <div class=\"info_box\">\r\n        <p class=\"info_tit\">템플릿 문법</p>\r\n        <div class=\"info\">\r\n          <p>\r\n            Vue는 다른 프론트엔드 프레임워크보다 html 문서에 친화적이다. <br>\r\n            다른 프레임워크인 React는 스크립트 내에서 class 선언하여 html 태그 작업을 하지만 Vue에서는 &lt;template&gt; 내에서 html 작업이 가능하다.\r\n          </p>\r\n          <CodeEditor\r\n            :value=codeEditorList[0]\r\n            :languages=\"[['js', 'React']]\"\r\n            :read_only=\"true\"\r\n            :wrap_code=\"true\"\r\n            width=\"100%\"\r\n            font_size=\"14px\"\r\n          ></CodeEditor>\r\n          <CodeEditor\r\n            :value=codeEditorList[1]\r\n            :languages=\"[['html', 'Vue']]\"\r\n            :read_only=\"true\"\r\n            :wrap_code=\"true\"\r\n            width=\"100%\"\r\n            font_size=\"14px\"\r\n          ></CodeEditor>\r\n          <p>이렇게 vue환경에서는 html태그를 직접 tamplate 내 작업이 가능하여, 마크업하는데 편리한 장점을 가지고 있다.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"info_box\">\r\n        <p class=\"info_tit\">텍스트 보간법</p>\r\n        <div class=\"info\">\r\n          <p>\r\n            Vue의 텍스트 보간법은 Mustache 문법( &#123;&#123; \t&nbsp;&nbsp;  &#125;&#125; )을 사용하여  Vue 인스턴스의 데이터를 화면에 출력하는 방법이다.  <br>\r\n            vue에서 일반적으로 사용되는 데이터 출력 방법 중 하나이며, 데이터 값이 변경되면 자동으로 실시간 업데이트가 된다.<br>\r\n            그리고 이중괄호안에 삼항연산자 등 스크립트 문법도 사용 가능하여, 다양한 방법으로 데이터 표시가 가능하다.<br>\r\n            사용방법은 간단하게 html 태그 내 &#123;&#123; 데이터값 &#125;&#125; 으로 코드작성하면 된다.\r\n          </p>\r\n          <div class=\"sample-box flex_center space_medium\">\r\n            <p class=\"sample-tit\">sample</p>\r\n            <p>현재번호 : {{ sampleNumber }}</p>\r\n            <button class=\"btn\" @click=\"sampleNumber ++\">클릭시 증가</button>\r\n            <button class=\"btn\" @click=\"sampleNumber --\">클릭시 감소</button>\r\n          </div>\r\n          <CodeEditor\r\n            :value=codeEditorList[2]\r\n            :languages=\"[['html', 'Vue']]\"\r\n            :read_only=\"true\"\r\n            :wrap_code=\"true\"\r\n            width=\"100%\"\r\n            font_size=\"14px\"\r\n          ></CodeEditor>\r\n        </div>\r\n      </div>\r\n      <div class=\"info_box\">\r\n        <p class=\"info_tit\">속성 바인딩</p>\r\n        <div class=\"info\">\r\n          <p>\r\n            html에선 속성(attribute)이 여러가지 존재한다.<br>\r\n            id부터 시작해서 class, style, type, href 등등 이런 다양한 속성을 대부분 사용하여 마크업을 한다.<br>\r\n            Vue의 속성 바인딩은 v-bind 디렉티브(:)를 사용하여 Vue 인스턴스의 데이터를 HTML 속성에 동적으로 바인딩하는 방법이다.<br>\r\n            v-bind:id=\"test\" 혹은 :id=\"test\" 이런 방식으로 작성하여 해당 태그에 대한 속성 컨트롤이 가능해진다.\r\n          </p>\r\n          <CodeEditor\r\n            :value=codeEditorList[3]\r\n            :languages=\"[['html', 'Vue']]\"\r\n            :read_only=\"true\"\r\n            :wrap_code=\"true\"\r\n            width=\"100%\"\r\n            font_size=\"14px\"\r\n          ></CodeEditor>\r\n        </div>\r\n      </div>\r\n      <div class=\"info_box\">\r\n        <p class=\"info_tit\">템플릿 참조(ref)</p>\r\n        <div class=\"info\">\r\n          <p>\r\n            html에서 특정이벤트가 필요한 경우 DOM 참조할때 js에서 querySelector 나 getElementBy 형식으로 참조한다.<br>\r\n            vue에서는 refs를 사용해서 해당 태그에 직접 참조가 가능하다.\r\n          </p>\r\n          <div class=\"sample-box flex_center space_medium\">\r\n            <p class=\"sample-tit\" ref=\"sampleTarget\">sample</p>\r\n            <p ref=\"sampleTarget\">안녕하세요</p>\r\n            <button class=\"btn\" @click=\"sampleClick()\">클릭시 문구변경</button>\r\n          </div>\r\n          <CodeEditor\r\n            :value=codeEditorList[4]\r\n            :languages=\"[['html', 'Vue']]\"\r\n            :read_only=\"true\"\r\n            :wrap_code=\"true\"\r\n            width=\"100%\"\r\n            font_size=\"14px\"\r\n          ></CodeEditor>\r\n        </div>\r\n      </div>\r\n      <div class=\"info_box\">\r\n        <p class=\"info_tit\">참고 사이트</p>\r\n        <div class=\"info\">\r\n          <div class=\"link_wrap\">\r\n            <a href=\"https://v3-docs.vuejs-korea.org/guide/essentials/template-syntax.html\" target=\"_blank\">Vue 공식문서 - 템플릿 문법</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport CodeEditor from 'simple-code-editor';\r\nconst codeEditorList = [\r\n`/** 리액트인 경우 (app.js) */\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nclass Content extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <h1>Hello, World!</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Content></Content>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;`\r\n,\r\n`<!-- Vue인 경우 -->\r\n\r\n<!-- (Content.vue) -->\r\n<template>\r\n  <h1>Hello, World!</h1>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'Content',\r\n}\r\n<${'/'}script>\r\n<!--// (Content.vue) -->\r\n\r\n\r\n<!-- (app.vue) -->\r\n<template>\r\n  <div id=\"app\">\r\n    <content></content>\r\n  </div>\r\n</template>\r\n<script>\r\nimport Content from './Content.vue'\r\nexport default {\r\n  name: 'Content',\r\n  components: {\r\n    Content,\r\n  }\r\n}\r\n<${'/'}script>\r\n<!--// (app.vue) -->`\r\n,\r\n`<template>\r\n  <p>현재번호 : {{ sampleNumber }}</p>\r\n  <button class=\"btn\" @click=\"sampleNumber ++\">클릭시 증가</button>\r\n  <button class=\"btn\" @click=\"sampleNumber --\">클릭시 감소</button>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'sampleNumber',\r\n  data(){\r\n    return{\r\n      sampleNumber : 1\r\n    }\r\n  },\r\n}\r\n<${'/'}script>`\r\n,\r\n`<template>\r\n  <input :type=\"controlObj.type\" :class=\"controlObj.class\" :title=\"controlObj.title\" :placeholder=\"controlObj.placeholder\">\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'attribute-bind',\r\n  data(){\r\n    return{\r\n      controlObj: {\r\n        type : 'text',\r\n        class : 'input-text',\r\n        title : 'input텍스트',\r\n        placeholder : '아이디를 입력하세요'\r\n      }\r\n    }\r\n  },\r\n}\r\n<${'/'}script>\r\n\r\n결과 :  <input type=\"text\" class=\"input-text\" title=\"input텍스트\" placeholder=\"아이디를 입력하세요\">`\r\n,\r\n`<template>\r\n  <p ref=\"sampleTarget\">안녕하세요</p>\r\n  <button class=\"btn\" @click=\"sampleClick()\">클릭시 문구변경</button>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'sampleBtn',\r\n  mounted(){\r\n  },\r\n  methods: {\r\n    sampleClick() {\r\n      const _target = this.$refs.sampleTarget\r\n      if(_target.innerText === '안녕하세요') {\r\n        _target.innerText = 'Hello'\r\n      } else {\r\n        _target.innerText = '안녕하세요'\r\n      }\r\n    }\r\n  }\r\n}\r\n<${'/'}script>`\r\n,\r\n\r\n]\r\nexport default {\r\n\r\n  name: 'data-binding',\r\n  props: {\r\n  },\r\n  components: {\r\n    CodeEditor\r\n  },\r\n  data(){\r\n    return{\r\n      codeEditorList,\r\n      sampleNumber : 1\r\n    }\r\n  },\r\n  mounted(){\r\n  },\r\n  methods: {\r\n    sampleClick() {\r\n      const _target = this.$refs.sampleTarget\r\n      if(_target.innerText === '안녕하세요') {\r\n        _target.innerText = 'Hello'\r\n      } else {\r\n        _target.innerText = '안녕하세요'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import { render } from \"./vue-basic.vue?vue&type=template&id=725b6458\"\nimport script from \"./vue-basic.vue?vue&type=script&lang=js\"\nexport * from \"./vue-basic.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\삼도리\\\\Desktop\\\\publish\\\\jbc\\\\jbc_vue_practice\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","ref","_createElementBlock","_hoisted_2","_hoisted_4","_hoisted_6","_hoisted_8","_createVNode","_component_CodeEditor","value","$data","languages","read_only","wrap_code","width","font_size","_hoisted_9","_hoisted_11","_hoisted_13","_hoisted_15","_toDisplayString","onClick","_hoisted_17","_hoisted_19","_hoisted_21","_hoisted_23","$options","_hoisted_27","codeEditorList","name","props","components","CodeEditor","data","sampleNumber","mounted","methods","sampleClick","_target","this","$refs","sampleTarget","innerText","__exports__","render"],"sourceRoot":""}