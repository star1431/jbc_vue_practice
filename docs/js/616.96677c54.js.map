{"version":3,"file":"js/616.96677c54.js","mappings":"mLACOA,MAAM,W,6cACTC,G,0CADFC,EAAAA,EAAAA,IAeM,MAfN,EAeMC,GAKR,OAEEC,KAAM,eACNC,MAAO,GAEPC,WAAY,GAGZC,OACE,MAAM,K,QCzBV,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE","sources":["webpack://jbc_test/./src/views/pages/note/vue_skill/vue-event.vue","webpack://jbc_test/./src/views/pages/note/vue_skill/vue-event.vue?4020"],"sourcesContent":["<template>\r\n  <div class=\"section\">\r\n    <h3><span>Vue 기능</span></h3>\r\n    <div class=\"info_wrap\">\r\n      <h4><i class=\"fa-brands fa-vuejs\"></i>vue 이벤트 핸들링</h4>\r\n      <div class=\"info_box\">\r\n        <p class=\"info_tit\">v-on 디렉티브</p>\r\n        <div class=\"info\">\r\n          <p>\r\n            Vue의 v-on 디렉티브는 이벤트 처리 방식 중 하나로, html 요소에서 발생하는 이벤트 감지, 혹은 발생할때 실행할 메서드를 지정할 수 있다. <br>\r\n            html 태그에서 제공하는 이벤트종류들 전부 v-on으로 사용가능하지만, html 이벤트와 다르게 v-on은 라이플사이클과 함께 작동한다.<br>\r\n            또한 v-on은 데이터와 연동, 이벤트 함수에 인자값 전달, 수식어를 사용한 버블링 방지 등등 다방면 활용이 가능하다. \r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n// import CodeEditor from 'simple-code-editor';\r\n\r\nexport default {\r\n\r\n  name: 'data-binding',\r\n  props: {\r\n  },\r\n  components: {\r\n    // CodeEditor\r\n  },\r\n  data(){\r\n    return{\r\n    }\r\n  },\r\n}\r\n</script>\r\n","import { render } from \"./vue-event.vue?vue&type=template&id=1509ab65\"\nimport script from \"./vue-event.vue?vue&type=script&lang=js\"\nexport * from \"./vue-event.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\삼도리\\\\Desktop\\\\publish\\\\jbc\\\\jbc_vue_practice\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_hoisted_2","_createElementBlock","_hoisted_4","name","props","components","data","__exports__","render"],"sourceRoot":""}