"use strict";(self["webpackChunkjbc_test"]=self["webpackChunkjbc_test"]||[]).push([[78],{3078:function(e,l,n){n.r(l),n.d(l,{default:function(){return ae}});var s=n(3396),a=n(7139),t=n(9242);const i={class:"section"},p=(0,s._)("h3",null,[(0,s._)("span",null,"Vue 기능")],-1),o={class:"info_wrap"},u=(0,s._)("h4",null,[(0,s._)("i",{class:"fa-brands fa-vuejs"}),(0,s.Uk)("vue 렌더링")],-1),f={class:"info_box"},m=(0,s._)("p",{class:"info_tit"},"조건부 렌더링 (v-if)",-1),r={class:"info"},c=(0,s._)("p",null,[(0,s.Uk)(" v-if 디렉티브는 Vue 인스턴스의 데이터에 따라 해당 요소를 동적으로 렌더링을 한다. "),(0,s._)("br"),(0,s.Uk)(" v-if가 적용된 요소는 Vue 인스턴스의 데이터가 true인 경우 DOM 노출이 되며, false인 경우 DOM 생성이 되지 않는다. "),(0,s._)("br"),(0,s.Uk)(" 따라서 v-if 사용하여 돔 생성 및 제거 반복되는 경우에는 메서드사용 및 템플릿 참조(ref)시 주의해야 한다. (다른방식 : v-show) "),(0,s._)("br"),(0,s.Uk)(" 또한 인라인요소를 가진 엘리먼트에는 v-if 디렉티브 적용이 안되어, 해당 인라인요소를 블럭요소로 대체하거나 인라인요소를 감싸는 블럭요소에 사용할 것을 권장한다. ")],-1),_={class:"sample-box flex_center space_medium"},d={class:"sample-tit",ref:"sampleTarget"},v={key:0},w={class:"info_box"},b=(0,s._)("p",{class:"info_tit"},"조건부 렌더링 심화 (v-else-if, v-else)",-1),h={class:"info"},k=(0,s._)("p",null,[(0,s.Uk)(" Vue에서 v-if 디렉티브와 함께 v-else-if와 v-else 디렉티브를 사용하여 좀 더 구체적인 조건부 렌더링을 구현할 수 있다."),(0,s._)("br"),(0,s.Uk)(" v-else-if 디렉티브는 이전 조건이 false일 경우 추가적인 조건을 제시하고, v-else 디렉티브는 이전 조건이 모두 false일 경우에 동작한다."),(0,s._)("br"),(0,s.Uk)(" 이를 통해 다양한 조건에 따라 요소를 동적으로 렌더링할 수 있다. ")],-1),I={class:"sample-box flex_center space_medium"},g={class:"sample-tit",ref:"sampleTarget"},x={key:0},y={key:1},U={key:2},z={class:"info_box"},D=(0,s._)("p",{class:"info_tit"},"조건부 렌더링 다른 방식 (v-show)",-1),E={class:"info"},V=(0,s._)("p",null,[(0,s.Uk)(" Vue에서 v-if 디렉티브는 DOM 자체를 렌더링하여 생성/삭제를 하기 때문에 처음 조건이 false일때 dom관련 메서드나 dom참조할때 까다롭다."),(0,s._)("br"),(0,s.Uk)(" 그래서 v-if를 사용하기 애매한 경우, 자주 토글되는 경우에선 v-show 사용하는걸 권장한다."),(0,s._)("br"),(0,s.Uk)(" v-show 디렉티브는 css의 display none 기능과 동일하다고 볼 수 있다. 단순히 dom 자체를 none/block 시키는 요소일 경우 v-show 사용하기 적합하다."),(0,s._)("br"),(0,s.Uk)(" 단, v-else와 같이 사용 불가능함. ")],-1),T={class:"sample-box flex_center space_medium"},C={class:"sample-tit",ref:"sampleTarget"},L={class:"info_box"},W=(0,s._)("p",{class:"info_tit"},"리스트 렌더링 (v-for)",-1),A={class:"info"},M=(0,s.Uk)(" v-for 디렉티브는 반복성을 가진 리스트 형태를 배열이나 객체로 하여금 각 항목을 반복하여 요소를 렌더링 하는 방법이다."),j=(0,s._)("br",null,null,-1),H=(0,s.Uk)(" 반복할 엘리먼트에 "),O=(0,s.Uk)(" 혹은 "),F=(0,s.Uk)(" 로 표현 한다."),K=(0,s._)("br",null,null,-1),Y=(0,s.Uk)(" - '변수' 는 각 요소의 값."),Z=(0,s._)("br",null,null,-1),q=(0,s.Uk)(" - '인덱스'는 각 요소의 인덱스 값."),R=(0,s._)("br",null,null,-1),B=(0,s.Uk)(" - '데이터'는 반복할 배열이나 객체 혹은 반복할 횟수."),G=(0,s._)("br",null,null,-1),J={class:"sample-box"},N=(0,s._)("p",{class:"sample-tit"},"sample (1)",-1),P=(0,s._)("p",{class:"sample-tit"},"sample (2)",-1),Q=(0,s.uE)('<div class="info_box"><p class="info_tit">참고 사이트</p><div class="info"><div class="link_wrap"><a href="https://v3-docs.vuejs-korea.org/guide/essentials/conditional.html" target="_blank">Vue 공식문서 - 조건부 렌더링</a></div></div></div>',1);function S(e,l,n,S,X,$){const ee=(0,s.up)("CodeEditor");return(0,s.wg)(),(0,s.iD)("div",i,[p,(0,s._)("div",o,[u,(0,s._)("div",f,[m,(0,s._)("div",r,[c,(0,s._)("div",_,[(0,s._)("p",d,"sample",512),(0,s._)("button",{class:"btn",onClick:l[0]||(l[0]=e=>X.sampleIf01=!X.sampleIf01)},"문구 생성/삭제 토글"),X.sampleIf01?((0,s.wg)(),(0,s.iD)("p",v,"안녕하세요!")):(0,s.kq)("",!0)]),(0,s.Wm)(ee,{value:X.codeEditorList[0],languages:[["html","Vue"]],read_only:!0,wrap_code:!0,width:"100%",font_size:"14px"},null,8,["value"])])]),(0,s._)("div",w,[b,(0,s._)("div",h,[k,(0,s._)("div",I,[(0,s._)("p",g,"sample",512),(0,s._)("button",{class:"btn",onClick:l[1]||(l[1]=e=>$.sampleToggle())}," data 현재값 : "+(0,a.zw)(X.sampleIf02),1),"one"===X.sampleIf02?((0,s.wg)(),(0,s.iD)("p",x,"('one')조건 참")):"two"===X.sampleIf02?((0,s.wg)(),(0,s.iD)("p",y,"('two')조건 참")):((0,s.wg)(),(0,s.iD)("p",U,"1,2조건 거짓 / 클릭시 다시 ('one') 리턴"))]),(0,s.Wm)(ee,{value:X.codeEditorList[1],languages:[["html","Vue"]],read_only:!0,wrap_code:!0,width:"100%",font_size:"14px"},null,8,["value"])])]),(0,s._)("div",z,[D,(0,s._)("div",E,[V,(0,s._)("div",T,[(0,s._)("p",C,"sample",512),(0,s._)("button",{class:"btn",onClick:l[2]||(l[2]=e=>X.sampleIf03=!X.sampleIf03)}," v-show 토글 "),(0,s.wy)((0,s._)("p",null,"v-show가 "+(0,a.zw)(X.sampleIf03)+"임!",513),[[t.F8,X.sampleIf03]]),(0,s.wy)((0,s._)("p",null,"v-show가 "+(0,a.zw)(X.sampleIf03)+"임!",513),[[t.F8,!X.sampleIf03]])]),(0,s.Wm)(ee,{value:X.codeEditorList[2],languages:[["html","Vue"]],read_only:!0,wrap_code:!0,width:"100%",font_size:"14px"},null,8,["value"])])]),(0,s._)("div",L,[W,(0,s._)("div",A,[(0,s._)("p",null,[M,j,H,(0,s.Wm)(ee,{value:X.codeEditorInline[0],languages:[["html","HTML"]],read_only:!0,wrap_code:!1,width:"auto",font_size:"14px"},null,8,["value"]),O,(0,s.Wm)(ee,{value:X.codeEditorInline[1],languages:[["html","HTML"]],read_only:!0,wrap_code:!1,width:"auto",font_size:"14px"},null,8,["value"]),F,K,Y,Z,q,R,B,G]),(0,s._)("div",J,[N,(0,s._)("ul",null,[((0,s.wg)(!0),(0,s.iD)(s.HY,null,(0,s.Ko)(X.sampleArr,((e,l)=>((0,s.wg)(),(0,s.iD)("li",{key:l},[(0,s._)("span",null,(0,a.zw)(e.title)+" : ",1),(0,s._)("span",null,(0,a.zw)(e.content),1)])))),128))]),P,(0,s._)("ul",null,[((0,s.wg)(),(0,s.iD)(s.HY,null,(0,s.Ko)(3,(e=>(0,s._)("li",{key:e},[(0,s._)("span",null,"숫자 : "+(0,a.zw)(e),1)]))),64))])]),(0,s.Wm)(ee,{value:X.codeEditorList[3],languages:[["html","Vue"]],read_only:!0,wrap_code:!0,width:"100%",font_size:"14px"},null,8,["value"])])]),Q])])}var X=n(7393);const $=['<div v-for="변수 in 데이터" :key="변수">','<div v-for="(변수, 인덱스) in 데이터" :key="인덱스">'],ee=['<template>\n  <button class="btn" @click="sampleIf01 = !sampleIf01">문구 생성/삭제 토글</button>\n  <p v-if="sampleIf01">안녕하세요!</p>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      sampleIf01: false\n    }\n}\n<\/script>','<template>\n  <button class="btn" @click="sampleToggle()"> data 현재값 : {{ sampleIf02 }} </button>\n  <p v-if="sampleIf02 ===\'one\'">(\'one\')조건 참</p>\n  <p v-else-if="sampleIf02 ===\'two\'">(\'two\')조건 참</p>\n  <p v-else>1,2조건 거짓 / 클릭시 다시 (\'one\') 리턴</p>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      sampleIf02 : "one"\n    }\n  },\n  methods:{\n    sampleToggle() {\n      if (this.sampleIf02 === "one") {\n        this.sampleIf02 = "two"\n      } else if (this.sampleIf02 === "two") {\n        this.sampleIf02 = "three"\n      } else {\n        this.sampleIf02 = "one"\n      }\n    }\n  }\n}\n<\/script>','<template>\n  <button class="btn" @click="sampleIf03 = !sampleIf03"> v-show 토글 </button>\n  <p v-show="sampleIf03">v-show가 {{sampleIf03}}임!</p>\n  <p v-show="!sampleIf03">v-show가 {{sampleIf03}}임!</p>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      sampleIf03 : true\n    }\n  },\n}\n<\/script>','<template>\n  <p class="sample-tit">sample (1)</p>\n  <ul>\n    <li v-for="(item, i) in sampleArr" :key="i">\n      <span>{{ item.title }} : </span>\n      <span>{{ item.content }}</span>\n    </li>\n  </ul>\n\n  <p class="sample-tit">sample (2)</p>\n  <ul>\n    <li v-for="number in 3" :key="number">\n      <span>숫자 : {{ number }}</span>\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      sampleArr: [\n        {title: \'타이틀1\', content: \'내용1\'},\n        {title: \'타이틀2\', content: \'내용2\'}\n      ]\n    }\n  }\n}\n<\/script>'];var le={name:"vueRendering-App",props:{},components:{CodeEditor:X.Z},data(){return{codeEditorInline:$,codeEditorList:ee,sampleIf01:!1,sampleIf02:"one",sampleIf03:!0,sampleArr:[{title:"타이틀1",content:"내용1"},{title:"타이틀2",content:"내용2"}]}},methods:{sampleToggle(){"one"===this.sampleIf02?this.sampleIf02="two":"two"===this.sampleIf02?this.sampleIf02="three":this.sampleIf02="one"}}},ne=n(89);const se=(0,ne.Z)(le,[["render",S]]);var ae=se}}]);
//# sourceMappingURL=78.015aacca.js.map