"use strict";(self["webpackChunkjbc_test"]=self["webpackChunkjbc_test"]||[]).push([[731],{1301:function(n,e,t){t.r(e),t.d(e,{default:function(){return O}});var o=t(3396);const i={class:"section"},a=(0,o._)("h3",null,[(0,o._)("span",null,"Vue 기능")],-1),l={class:"info_wrap"},s=(0,o._)("h4",null,[(0,o._)("i",{class:"fa-brands fa-vuejs"}),(0,o.Uk)("Vue 컴포넌트")],-1),c={class:"info_box"},r=(0,o._)("p",{class:"info_tit"},"vue 기본 구조",-1),p={class:"info"},d=(0,o._)("p",null,[(0,o.Uk)(" vue에서 사용하는 컴포넌트 기능은 HTML Element를 확장하고 재사용 가능한 형태로 구현하는 것을 말한다. "),(0,o._)("br"),(0,o.Uk)(" Vue.js에서 사용된 모든 컴포넌트는 하나하나가 Vue.js의 인스턴스이기도 하다. 컴포넌트의 생성 과정은 단순히 등록하고 사용하는 패턴으로만 이루어진다. "),(0,o._)("br"),(0,o.Uk)(" vue의 컴포넌트 기본 구조는 다음과 같다. ")],-1),m={class:"info_box"},u=(0,o._)("p",{class:"info_tit"},"props 전달",-1),_={class:"info"},v=(0,o._)("p",null,[(0,o.Uk)(" props는 부모컴포넌트에서 자식컴포넌트에게 데이터를 전달할때 주로 사용된다."),(0,o._)("br"),(0,o.Uk)(" 그리고 전달받은 자식컴포넌트는 그 데이터를 활용하여 데이터표현이 가능하다. "),(0,o._)("br"),(0,o.Uk)(" props를 이용하려면 데이터를 전달 받을 자식컴포넌트에 props 옵션 정의하고, 부모에서 프로퍼티를 전달하면 된다. ")],-1),h={class:"info_box"},f=(0,o._)("p",{class:"info_tit"},"컴포넌트 slot",-1),g={class:"info"},x=(0,o._)("p",{style:{"margin-bottom":"0.8rem"}},[(0,o.Uk)(" Vue 디렉티브 중 <slot>은 자식 컴포넌트가 부모 컴포넌트로 부터 받은 콘텐츠를 표시하기 위해 사용되는 기능이다."),(0,o._)("br"),(0,o.Uk)(" slot을 사용하여 부모 컴포넌트에서 자식 컴포넌트의 레이아웃, 디자인 및 내용을 조작할 수 있으며, 더욱 동적이고 재사용 가능한 컴포넌트를 만들 수가 있다."),(0,o._)("br"),(0,o.Uk)(" 사용하는 방법은 자식컴포넌트에선 <slot> 태그 || 부모 컴포넌트에선 <template> 태그를 사용한다."),(0,o._)("br"),(0,o.Uk)(' 만약 slot과 template이 복수인 경우에는 자식컴포넌트에서 <slot :name="sample"> 처럼 name을 할당하고, 부모컴포넌트에서 <template v-slot:sample> v-slot 사용하여 해당 컨텐츠 지정이 가능하다. ')],-1),b={class:"sample-box flex_center space_medium"},w={class:"sample-tit",ref:"sampleTarget"},y=(0,o._)("p",null,"아코디언 1 내용",-1),k=(0,o._)("p",null,"아코디언 2 내용",-1),E=(0,o._)("p",null,"아코디언 3 내용",-1),A=(0,o.uE)('<div class="info_box"><p class="info_tit">참고 사이트</p><div class="info"><div class="link_wrap"><a href="https://v3-docs.vuejs-korea.org/guide/essentials/component-basics.html" target="_blank">Vue 공식문서 - 컴포넌트</a></div></div></div>',1);function C(n,e,t,C,N,L){const U=(0,o.up)("CodeEditor"),V=(0,o.up)("ui-accordion");return(0,o.wg)(),(0,o.iD)("div",i,[a,(0,o._)("div",l,[s,(0,o._)("div",c,[r,(0,o._)("div",p,[d,(0,o.Wm)(U,{value:N.codeEditorList[0],languages:[["html","Vue"]],read_only:!0,wrap_code:!0,width:"100%",font_size:"14px"},null,8,["value"])])]),(0,o._)("div",m,[u,(0,o._)("div",_,[v,(0,o.Wm)(U,{value:N.codeEditorList[1],languages:[["html","Vue"]],read_only:!0,wrap_code:!0,width:"100%",font_size:"14px"},null,8,["value"]),(0,o.Wm)(U,{value:N.codeEditorList[2],languages:[["html","Vue"]],read_only:!0,wrap_code:!0,width:"100%",font_size:"14px"},null,8,["value"])])]),(0,o._)("div",h,[f,(0,o._)("div",g,[x,(0,o._)("div",b,[(0,o._)("p",w,"sample",512),(0,o.Wm)(V,{items:N.sampleAcco},{"item-1":(0,o.w5)((()=>[y])),"item-2":(0,o.w5)((()=>[k])),"item-3":(0,o.w5)((()=>[E])),_:1},8,["items"])]),(0,o.Wm)(U,{value:N.codeEditorList[3],languages:[["html","Vue"]],read_only:!0,wrap_code:!0,width:"100%",font_size:"14px"},null,8,["value"]),(0,o.Wm)(U,{value:N.codeEditorList[4],languages:[["html","Vue"]],read_only:!0,wrap_code:!0,width:"100%",font_size:"14px"},null,8,["value"])])]),A])])}var N=t(7393),L=t(7139);const U={class:"accordion"},V={class:"accordion-item__content"},j={class:"slot"};function z(n,e,t,i,a,l){return(0,o.wg)(),(0,o.iD)("div",U,[((0,o.wg)(!0),(0,o.iD)(o.HY,null,(0,o.Ko)(t.items,((t,i)=>((0,o.wg)(),(0,o.iD)("div",{key:i,class:"accordion-item"},[(0,o._)("div",{class:"accordion-item__header",role:"button",onClick:e[0]||(e[0]=n=>l.sampleAccordion(n))},[(0,o._)("p",null,(0,L.zw)(t.title),1)]),(0,o._)("div",V,[(0,o._)("div",j,[(0,o.WI)(n.$slots,"item-"+(i+1),{},void 0,!0)])])])))),128))])}var D={name:"ui-accordion",props:{items:{type:Array,default:()=>[]}},methods:{sampleAccordion(n){const e=n.target,t=e.closest(".accordion-item"),o=t.querySelector(".accordion-item__content");t.classList.toggle("active"),t.classList.contains("active")?o.style.maxHeight=o.scrollHeight+"px":o.style=null}}},W=t(89);const H=(0,W.Z)(D,[["render",z],["__scopeId","data-v-33261aac"]]);var S=H;const q=["\x3c!-- 컴포넌트의 템플릿을 정의. 템플릿내 html 태그나 자식 컴포넌트를 직접 사용 --\x3e\n<template>\n  <div class=\"main\">\n    <p> sampleNumber : {{ sampleNumber }} </p> \x3c!-- '1' --\x3e\n    <p>computed : {{ computedSample }}</p> \x3c!-- '25' --\x3e\n    <button @click=\"sampleNumber ++\">숫자 변경</button>\n    <child-component></child-component>\n  </div>\n</template>\n\n<script>\nimport chilComponent from '@/childComponent.vue'\n\nexport default {\n  name: '컴포넌트 이름',\n  props: {\n    // 부모 컴포넌트로부터 전달받는 프로퍼티를 정의함 (자세한건 다음 단에 설명)\n    sampleProps: {\n      type: Array,\n      required: true,\n      default: () => []\n    }\n  },\n  components: {\n    // import한 컴포넌트를 정의함\n    childComponent\n  },\n  data() {\n    return {\n      // 컴포넌트 내부에서 사용되는 데이터를 정의함\n      sampleNumber: 1\n    };\n  },\n  computed: {\n    // 계산된 데이터를 정의함\n    computedSample() {\n      return this.sampleNumber * 5\n    }\n  },\n  mounted: {\n    // 마운트 후 실행할 로직이나 메서드를 호출\n    this.sampleConsole()\n  }\n  methods: {\n    // 컴포넌트 내부에서 사용되는 메서드를 정의함\n    sampleConsole() {\n      console.log('초기숫자는?' + sampleNumber)\n    }\n  },\n  watch: {\n    // 데이터 변화를 실시간 감시하고, 변화에 따른 로직을 정의함\n    sampleNumber(newNum, oldNum) {\n      console.log('숫자변경! => 현재:' + newNum + ' / 이전:' + oldNum)\n    }\n  },\n};\n<\/script>\n\n<style scoped>\n/* scoped 넣으면 해당 컴포넌트에만 작성된 스타일이 적용됨 */\n</style>","\x3c!-- 부모컴포넌트.vue --\x3e\n<template>\n  <div class=\"main\">\n    <child-component :params=\"paramsData\"> \x3c!-- :params => 자식컴포넌트의 props명 --\x3e\n    </child-component>\n  </div>\n</template>\n\n<script>\nimport ChildComponent from '@/자식컴포넌트.vue'\n\nexport default {\n  components: {\n    ChildComponent,\n  },\n  data() {\n    return {\n      paramsData: {\n        title: '제목입니다.',\n        content: '내용입니다.',\n        date: '0000-00-00',\n      }\n    };\n  },\n};\n<\/script>","\x3c!-- 자식컴포넌트.vue --\x3e\n<template>\n  <div class=\"sample-info\">\n    <h3>{{ params.title }}</h3>\n    <p>{{ params.content }}</p>\n    <p>{{ params.date }}</p> \n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    params: {\n      // tpye종류 - Object, Array, String, Number, Boolean, Date, Function, Symbol\n      type: Object,\n      required: false,  // required? props가 꼭필요한 경우 true\n      default: () => {\n        return {\n          title: '제목없음',\n          content: '내용없음',\n          date: '0000-00-00'\n        }\n      }\n    }\n  },\n};\n<\/script>","\x3c!-- 부모컴포넌트.vue --\x3e\n<template>\n  <ui-accordion :items=\"sampleAcco\">\n    <template v-slot:item-1>\n      <p>아코디언 1 내용</p>\n    </template>\n    <template v-slot:item-2>\n      <p>아코디언 2 내용</p>\n    </template>\n    <template v-slot:item-3>\n      <p>아코디언 3 내용</p>\n    </template>\n  </ui-accordion>\n</template>\n\n<script>\nimport uiAccordion from '@/components/ui-accordion.vue'\n\nexport default {\n  components: {\n    uiAccordion,\n  },\n  data() {\n    return {\n      sampleAcco: [\n        {title: '아코디언1 타이틀입니다.'},\n        {title: '아코디언2 타이틀입니다.'},\n        {title: '아코디언3 타이틀입니다.'}\n      ]\n    };\n  },\n};\n<\/script>",'\x3c!-- 자식컴포넌트.vue --\x3e\n<template>\n  <div class="accordion">\n    <div v-for="(item, i) in items" :key="i" class="accordion-item">\n      <div class="accordion-item__header" role="button" @click="sampleAccordion($event)">\n        <p>{{ item.title }}</p>\n      </div>\n      <div class="accordion-item__content">\n        <div class="slot">\n          <slot :name="\'item-\'+(i+1)"> \x3c!-- <template v-slot:item-1> --\x3e</slot>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \'ui-accordion\',\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    }\n    \n  },\n  methods: {\n    sampleAccordion(e) {\n      const _target = e.target\n      const _parentEl = _target.closest(\'.accordion-item\')\n      const _contentEl = _parentEl.querySelector(\'.accordion-item__content\')\n      _parentEl.classList.toggle(\'active\')\n      if(_parentEl.classList.contains(\'active\')) {\n        _contentEl.style.maxHeight = _contentEl.scrollHeight + \'px\'\n      } else {\n        _contentEl.style = null\n      }\n    }\n  }\n}\n<\/script>\n<style scoped>\n.accordion{width:100%;}\n.accordion .accordion-item{padding:0 1.2rem;border-radius:0.8rem;border:0.1rem solid #878d8c;overflow:hidden;}\n.accordion .accordion-item + .accordion-item{margin-top:0.8rem;}\n.accordion .accordion-item__header{display:flex;align-items:center;padding:1.2rem 0;width:100%;cursor:pointer;}\n.accordion .accordion-item__header p{font-size:1.6rem;font-weight:bold;}\n.accordion .accordion-item__content{max-height:0;transition:max-height 0.2s;}\n.accordion .accordion-item__content .slot{padding:1.2rem 0;border-top:0.1rem solid #878d8c;}\n</style>'];var Z={name:"vue-component-App",props:{},components:{CodeEditor:N.Z,uiAccordion:S},data(){return{codeEditorList:q,sampleAcco:[{title:"아코디언1 타이틀입니다."},{title:"아코디언2 타이틀입니다."},{title:"아코디언3 타이틀입니다."}]}}};const I=(0,W.Z)(Z,[["render",C]]);var O=I}}]);
//# sourceMappingURL=731.dbe977a8.js.map